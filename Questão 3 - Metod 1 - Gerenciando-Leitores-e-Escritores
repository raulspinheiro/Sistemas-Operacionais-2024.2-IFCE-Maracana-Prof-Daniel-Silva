#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

#define LEITORES 5
#define ESCRITORES 2

sem_t w_mutex;
sem_t mutex;
int contador_leitura = 0;

void *leitor(void *arg) {
    int id = (int) arg;

    sem_wait(&mutex);
    contador_leitura++;
    if (contador_leitura == 1) {
        sem_wait(&w_mutex);
    }
    sem_post(&mutex);

    printf("Leitor %d está lendo.\n", id);
    sleep(1);

    sem_wait(&mutex);
    contador_leitura--;
    if (contador_leitura == 0) {
        sem_post(&w_mutex);
    }
    sem_post(&mutex);

    return NULL;
}

void *escritor(void *arg) {
    int id = (int) arg;

    sem_wait(&w_mutex);
    printf("Escritor %d está escrevendo.\n", id);
    sleep(2);
    sem_post(&w_mutex);

    return NULL;
}

int main() {
    pthread_t leitores[LEITORES], escritores[ESCRITORES];

    sem_init(&w_mutex, 0, 1);
    sem_init(&mutex, 0, 1);

    for (int i = 0; i < LEITORES; i++) {
        pthread_create(&leitores[i], NULL, leitor, (void *)i);
    }
    for (int i = 0; i < ESCRITORES; i++) {
        pthread_create(&escritores[i], NULL, escritor, (void *)i);
    }

    for (int i = 0; i < LEITORES; i++) {
        pthread_join(leitores[i], NULL);
    }
    for (int i = 0; i < ESCRITORES; i++) {
        pthread_join(escritores[i], NULL);
    }

    sem_destroy(&w_mutex);
    sem_destroy(&mutex);

    return 0;
}
